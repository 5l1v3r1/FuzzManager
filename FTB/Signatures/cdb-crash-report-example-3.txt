
Microsoft (R) Windows Debugger Version 6.12.0002.633 AMD64
Copyright (c) Microsoft Corporation. All rights reserved.


Loading Dump File [c:\Users\fuzz1win\AppData\Local\CrashDumps\js-dbg-32-prof-dm-windows-388bdc46ba51.exe.4228.dmp]
User Mini Dump File: Only registers, stack and portions of memory are available

Symbol search path is: *** Invalid ***
****************************************************************************
* Symbol loading may be unreliable without a symbol search path.           *
* Use .symfix to have the debugger choose a symbol path.                   *
* After setting your symbol path, use .reload to refresh symbol locations. *
****************************************************************************
Executable search path is:
Windows 7 Version 7601 (Service Pack 1) MP (8 procs) Free x86 compatible
Product: WinNt, suite: SingleUserTS
Machine Name:
Debug session time: Mon Dec 21 03:14:14.000 2015 (UTC - 8:00)
System Uptime: not available
Process Uptime: 0 days 0:00:21.000
...........................
This dump file has a breakpoint exception stored in it.
The stored exception information can be accessed via .ecxr.
eax=00000000 ebx=0020ce04 ecx=12630a6d edx=00000012 esi=00000002 edi=00000000
eip=779a015d esp=0020cdb4 ebp=0020ce50 iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246
*** ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll -
ntdll!NtWaitForMultipleObjects+0x15:
779a015d 83c404          add     esp,4
0:000> cdb: Reading initial command '.load C:\Program Files\Debugging Tools for Windows (x64)\winext\msec.dll;$<c:\Users\fuzz1win\funfuzz\util\cdbCmds.txt'
0:000> .echo Toggle for 32-bit/64-bit modes
Toggle for 32-bit/64-bit modes
0:000> .echo See http://people.mozilla.org/~aklotz/windbgcheatsheet.html
See http://people.mozilla.org/~aklotz/windbgcheatsheet.html
0:000> !wow64exts.sw
!wow64exts.sw : command invalid on non-64bit target
0:000> .echo Display lines in stack trace
Display lines in stack trace
0:000> .lines
Line number information will be loaded
0:000> .echo .ecxr switches to the exception context frame
.ecxr switches to the exception context frame
0:000> .ecxr
eax=00000000 ebx=00000000 ecx=12630a6d edx=00000012 esi=00c6b180 edi=00000000
eip=01206fbd esp=0020d5b4 ebp=0020d5bc iopl=0         nv up ei pl nz ac pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000216
*** WARNING: Unable to verify checksum for js-dbg-32-prof-dm-windows-388bdc46ba51.exe
js_dbg_32_prof_dm_windows_388bdc46ba51!JS::Value::isMagic+0x4d:
01206fbd cc              int     3
*** ERROR: Symbol file could not be found.  Defaulted to export symbols for ntdll.dll -
*** ERROR: Symbol file could not be found.  Defaulted to export symbols for kernel32.dll -
0:000> .echo Inspect program counter, equivalent of gdb's "x/i $pc"
Inspect program counter, equivalent of gdb's "x/i $pc"
0:000> u
ntdll!NtWaitForMultipleObjects+0x15:
779a015d 83c404          add     esp,4
779a0160 c21400          ret     14h
779a0163 90              nop
ntdll!NtSetInformationObject:
779a0164 b859000000      mov     eax,59h
779a0169 33c9            xor     ecx,ecx
779a016b 8d542404        lea     edx,[esp+4]
779a016f 64ff15c0000000  call    dword ptr fs:[0C0h]
779a0176 83c404          add     esp,4
0:000> .echo Inspect eip (32-bit) register, equivalent of gdb's "x/b $eax"
Inspect eip (32-bit) register, equivalent of gdb's "x/b $eax"
0:000> db @@c++(@eip) L4
01206fbd  cc 6a 03 c7                                      .j..
0:000> .echo Inspect rip (64-bit) register, equivalent of gdb's "x/b $rax"
Inspect rip (64-bit) register, equivalent of gdb's "x/b $rax"
0:000> db @@c++(@rip) L8
Bad register error at '@rip) '
0:000> .echo To switch frames: .frame /r /c <frame number>
To switch frames: .frame /r /c <frame number>
0:000> .echo Then inspect locals using: dv <locals in this frame>
Then inspect locals using: dv <locals in this frame>
0:000> .echo Running !exploitable
Running !exploitable
0:000> !exploitable -v

!exploitable 1.6.0.0
HostMachine\HostUser
Executing Processor Architecture is x86
Debuggee is in User Mode
Debuggee is a user mode small dump file
Event Type: Exception
Exception Faulting Address: 0x1206fbd
Second Chance Exception Type: STATUS_BREAKPOINT (0x80000003)

Faulting Instruction:01206fbd int 3

Basic Block:
    01206fbd int 3

Exception Hash (Major/Minor): 0x815301b3.0x762bfe25

 Hash Usage : Stack Trace:
Major+Minor : js_dbg_32_prof_dm_windows_388bdc46ba51!JS::Value::isMagic+0x4d
Major+Minor : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::InvokeFunction+0x1be
Major+Minor : Unknown
Major+Minor : js_dbg_32_prof_dm_windows_388bdc46ba51!EnterIon+0x203
Major+Minor : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::IonCannon+0x110
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::RunScript+0x12c
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Invoke+0x397
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Invoke+0x1ad
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::InvokeFunction+0x26c
Minor       : Unknown
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!EnterIon+0x203
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::IonCannon+0x110
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!Interpret+0x9fbc
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::RunScript+0x267
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::ExecuteKernel+0x2ac
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Execute+0x1be
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!Evaluate+0x289
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!Evaluate+0x93
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!JS::Evaluate+0x17
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!EvalInContext+0x297
Minor       : Unknown
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!Print+0x38
Minor       : Unknown
Minor       : Unknown
Minor       : Unknown
Minor       : Unknown
Minor       : Unknown
Minor       : Unknown
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Activation::Activation+0xee
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!EnterIon+0x203
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::IonCannon+0x110
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::RunScript+0x12c
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Invoke+0x397
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Invoke+0x1ad
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::DoCallFallback+0x5fd
Minor       : Unknown
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!EnterBaseline+0x2a8
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::jit::EnterBaselineMethod+0x110
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::RunScript+0x1d8
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::ExecuteKernel+0x2ac
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!js::Execute+0x1be
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!ExecuteScript+0x146
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!JS_ExecuteScript+0x45
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!RunFile+0x174
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!ProcessArgs+0x1e5
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!Shell+0x195
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!main+0xec8
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!__tmainCRTStartup+0x199
Minor       : js_dbg_32_prof_dm_windows_388bdc46ba51!mainCRTStartup+0xd
Minor       : kernel32!BaseThreadInitThunk+0x12
Excluded    : ntdll!RtlInitializeExceptionChain+0x63
Excluded    : ntdll!RtlInitializeExceptionChain+0x36
Instruction Address: 0x0000000001206fbd
Source File: c:\users\fuzz1win\shell-cache\js-dbg-32-prof-dm-windows-388bdc46ba51\objdir-js\dist\include\js\value.h
Source Line: 1218

Description: Possible Stack Corruption
Short Description: PossibleStackCorruption
Exploitability Classification: UNKNOWN
Recommended Bug Title: Possible Stack Corruption starting at js_dbg_32_prof_dm_windows_388bdc46ba51!JS::Value::isMagic+0x000000000000004d (Hash=0x815301b3.0x762bfe25)

The stack trace contains one or more locations for which no symbol or module could be found. This may be a sign of stack corruption.
0:000> .echo Backtrace of faulting thread, limited to 250 frames
Backtrace of faulting thread, limited to 250 frames
0:000> ~#kn 250
 # ChildEBP RetAddr
WARNING: Stack unwind information not available. Following frames may be wrong.
00 0020ce50 772219fc ntdll!NtWaitForMultipleObjects+0x15
01 0020ce98 77224200 kernel32!WaitForMultipleObjectsEx+0x8e
02 0020ceb4 772480ec kernel32!WaitForMultipleObjects+0x18
03 0020cf20 77247fab kernel32!GetApplicationRecoveryCallback+0x2a7
04 0020cf34 772478a0 kernel32!GetApplicationRecoveryCallback+0x166
05 0020cf44 7724781f kernel32!UnhandledExceptionFilter+0x161
06 0020cfd0 779f3b8f kernel32!UnhandledExceptionFilter+0xe0
07 0020fdbc 779b97c5 ntdll!RtlKnownExceptionFilter+0xb7
08 0020fdd4 00000000 ntdll!RtlInitializeExceptionChain+0x36
0:000> q
quit:
